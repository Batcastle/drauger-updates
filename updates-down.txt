#!/bin/bash
# -*- coding: utf-8 -*-
#
# update-down.txt
#
#
#New Bug Update 1
if [ ! -e /usr/drauger/updates-config/beta_2.flag ]; then
  if [ ! -e /usr/drauger/updates-config/beta_3.flag ]; then
    if [ ! -e /usr/drauger/updates-config/stable.flag ]; then
      read -p "Did you initially install Drauger OS when it was in Beta 2 or in Beta 3? (2/3)" b
      if [[ "$b" == "2" ]]; then
         touch /usr/drauger/updates-config/beta_2.flag
      else
        if [[ "$b" == "3" ]]; then
          touch /usr/drauger/updates-config/beta_3.flag
        else
          echo "input not recognized. Please run 'sudo update-os -i' and retry"
          exit 2
        fi
      fi
    fi
  fi
fi
be="/usr/drauger/updates-config/beta_3.flag"
ba="/usr/drauger/updates-config/beta_2.flag"
st="/usr/drauger/updates-config/stable.flag"
#add config files for future legacy updates
leg1_config="/usr/drauger/updates-config/leg1.config"
leg2_config="/usr/drauger/updates-config/leg2.config"
if [ ! -e "$leg1_config" ]; then
  mkdir /usr/drauger
  mkdir /usr/drauger/updates-config
  if [ -e "$be" ]; then
    echo "OPT_IN=yes" >> $leg1_config
  else
    read -p "Would you like to install legacy update 1? 
  
Updates include:
  *new xboxdrv daemon

(Y/n):" opt
    if [[ "$opt" == "y" ]] || [[ "$opt" == "Y" ]]; then
      echo "OPT_IN=yes" >> $leg1_config
    else
      echo "OPT_IN=no" >> $leg1_config
    fi
  fi
else
  leg1=$(cat $leg1_config)
  if [[ "$leg1" == "OPT_IN=yes" ]]; then
    if [ -e /bin/usb-scanner ]; then
      opt="no"
      #UPDATE AUGUST 5th, 2018
      #Update old `usb-scanner` script to new, temporary one to reduce CPU usage while new C++ `usb-scanner` program is under development
      read -p "You have legacy 1 updates enabled! This means you may install the latest update to the xboxdrv daemon.
This update includes:
  *Performance improvements to reduce CPU usage system wide

Would you like to install this update? (Y/n): " up_leg
      if [[ "$up_leg" == "Y" ]] || [[ "$up_leg" == "y" ]]; then
        echo "\nInstalling Updates. Please Wait. . . \n"
        wget -O /bin/usb-scanner https://raw.githubusercontent.com/Batcastle/drauger-updates/master/leg1/usb-scanner
        echo "Updates Complete."
      fi
    else
      opt="yes"
    fi
  else
    opt="no"
  fi
fi
if [[ "$opt" == "yes" ]]; then
  #In this update, `xboxdrv` gets a new daemon which supports more devices and auto-mounts them
  #
  #make directory where support lists will be held
  +mkdir $HOME/.xboxdrv
  #
  #download necessary files
  wget -O /bin/usb-scanner https://raw.githubusercontent.com/Batcastle/drauger-updates/master/leg1/usb-scanner
  wget -O $HOME/.xboxdrv/mounted.list https://raw.githubusercontent.com/Batcastle/drauger-updates/master/leg1/mounted.list
  wget -O $HOME/.xboxdrv/supported.list https://raw.githubusercontent.com/Batcastle/drauger-updates/master/leg1/supported.list
  wget -O $HOME/.xboxdrv/custom_add.list https://raw.githubusercontent.com/Batcastle/drauger-updates/master/leg1/custom_add.list
  #
  #make files executable
  chmod +x /bin/usb-scanner
  #
  #ask for the user's choice on whether they want usb-scanner daemon to start on startup
  read -p "Would you like to add the new xboxdrv daemon to your startup apps? (Y/n)" x
  #
  #make necessary changes if they reply "Y" or "y"
  if [[ "$x" == "Y" ]] || [[ "$x" == "y" ]]; then
    echo "[Desktop Entry]
Name=usb-scanner
Exec=/bin/usb-scanner
Type=Application
Hidden=false
NoDisplay=false
Comment=This daemon auto-runs 'xboxdrv' when a recognized gamepad is plugged in" >> ~/.config/autostart/usb-scanner.desktop
  fi
  #
  #updates complete
fi
read -p "Would you like to uninstall 'drauger-os-tutorial? (Y/n)" o
if [[ "$o" == "Y" ]] || [[ "$o" == "y" ]]; then
  pkexec apt-get purge -y drauger-os-tutorial
  echo "OPT_IN=yes" >> /usr/drauger/updates-config/leg3.config
  echo "Updates complete"
else
  echo "OPT_IN=no" >> /usr/drauger/updates-config/leg3.config
fi
read -p "Would you like to install the new Drauger Store? [y/N]: " a
if [[ "$a" == "Y" ]] || [[ "$a" == "y" ]]; then
  echo "OPT_IN=yes" >> /usr/drauger/updates-config/leg5.config
  wget -O $HOME/drauger-store.deb https://github.com/Batcastle/drauger-updates/raw/master/leg5/drauger-store_0.0.9_all.deb
  pkexec apt-get install ./drauger-store.deb && echo "Updates complete!" || echo -e "We're sorry. The Drauger Store did not install.\nPlease email draugeros@gmail.com for help."
  rm $HOME/drauger-store.deb
else
  echo "OPT_IN=no" >> /usr/drauger/updates-config/leg5.config
fi
