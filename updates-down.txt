#!/bin/bash
# -*- coding: utf-8 -*-
#
# update-down.txt
#
#
if [ ! -e /usr/drauger/updates-config/beta_2.flag ] && [ ! -e /usr/drauger/updates-config/beta_3.flag ] && [ ! -e /usr/drauger/updates-config/stable.flag ]; then
      read -p "Did you initially install Drauger OS 7.3.6 when it was in Beta 2 or in Beta 3? [2/3]: " b
      if [[ "$b" == "2" ]]; then
         touch /usr/drauger/updates-config/beta_2.flag
      elif [[ "$b" == "3" ]]; then
         touch /usr/drauger/updates-config/beta_3.flag
      else
         echo "input not recognized. Please run 'sudo update-os -i' and retry"
         exit 2
      fi
fi
be="/usr/drauger/updates-config/beta_3.flag"
ba="/usr/drauger/updates-config/beta_2.flag"
st="/usr/drauger/updates-config/stable.flag"
leg1_config="/usr/drauger/updates-config/leg1.config"
leg2_config="/usr/drauger/updates-config/leg2.config"
if [ ! -e "$leg1_config" ]; then
  mkdir /usr/drauger
  mkdir /usr/drauger/updates-config
  if [ -e "$be" ]; then
    echo "OPT_IN=yes" >> $leg1_config
  else
    read -p "Would you like to install legacy update 1? 
  
Updates include:
  *new xboxdrv daemon

(Y/n):" opt
    if [[ "$opt" == "y" ]] || [[ "$opt" == "Y" ]]; then
      echo "OPT_IN=yes" >> $leg1_config
    else
      echo "OPT_IN=no" >> $leg1_config
    fi
  fi
else
  leg1=$(cat $leg1_config)
  if [[ "$leg1" == "OPT_IN=yes" ]]; then
    if [ -e /bin/usb-scanner ]; then
      opt="no"
      read -p "You have legacy 1 updates enabled! This means you may install the latest update to the xboxdrv daemon.
This update includes:
  *Performance improvements to reduce CPU usage system wide

Would you like to install this update? [Y/n]: " up_leg
      if [[ "$up_leg" == "Y" ]] || [[ "$up_leg" == "y" ]]; then
        echo "\nInstalling Updates. Please Wait. . . \n"
        wget -O /bin/usb-scanner https://raw.githubusercontent.com/Batcastle/drauger-updates/master/leg1/usb-scanner
        echo "UPDATE 1 COMPLETE" >> $leg1_config
      fi
    else
      opt="yes"
    fi
  else
    opt="no"
  fi
fi
if [[ "$opt" == "yes" ]]; then
  mkdir $HOME/.xboxdrv
  wget -O /bin/usb-scanner https://raw.githubusercontent.com/Batcastle/drauger-updates/master/leg1/usb-scanner
  wget -O $HOME/.xboxdrv/mounted.list https://raw.githubusercontent.com/Batcastle/drauger-updates/master/leg1/mounted.list
  wget -O $HOME/.xboxdrv/supported.list https://raw.githubusercontent.com/Batcastle/drauger-updates/master/leg1/supported.list
  wget -O $HOME/.xboxdrv/custom_add.list https://raw.githubusercontent.com/Batcastle/drauger-updates/master/leg1/custom_add.list
  chmod +x /bin/usb-scanner
  read -p "Would you like to add the new xboxdrv daemon to your startup apps? [Y/n]: " x
  if [[ "$x" == "Y" ]] || [[ "$x" == "y" ]]; then
    echo "[Desktop Entry]
Name=usb-scanner
Exec=/bin/usb-scanner
Type=Application
Hidden=false
NoDisplay=false
Comment=This daemon auto-runs 'xboxdrv' when a recognized gamepad is plugged in" >> ~/.config/autostart/usb-scanner.desktop
  fi
fi
if [ ! -e /usr/drauger/updates-config/leg3.config ]; then
  read -p "Would you like to uninstall 'drauger-os-tutorial? [Y/n]: " o
  if [[ "$o" == "Y" ]] || [[ "$o" == "y" ]]; then
    pkexec apt-get purge -y drauger-os-tutorial
    echo "OPT_IN=yes" >> /usr/drauger/updates-config/leg3.config
  else
    echo "OPT_IN=no" >> /usr/drauger/updates-config/leg3.config
  fi
fi
if [ ! -e /usr/drauger/updates-config/leg5.config ]; then
  read -p "Would you like to install the new Drauger Store? [y/N]: " a
  if [[ "$a" == "Y" ]] || [[ "$a" == "y" ]]; then
    echo "OPT_IN=yes" >> /usr/drauger/updates-config/leg5.config
    wget https://github.com/Batcastle/drauger-updates/raw/master/leg5/drauger-store_0.0.9_all.deb
    pkexec dpkg -i drauger-store_0.0.9_all.deb && echo "Updates complete!" || echo -e "We're sorry. The Drauger Store did not install.\nPlease email draugeros@gmail.com for help."
    rm $HOME/drauger-store_0.0.9_all.deb
  else
    echo "OPT_IN=no" >> /usr/drauger/updates-config/leg5.config
  fi
fi
LSB="NAME='Ubuntu'
VERSION='7.3.7 (Revenant)'
ID=ubuntu
ID_LIKE=debian
PRETTY_NAME='Drauger OS 7.3.7 Revenant'
VERSION_ID='18.04'
HOME_URL='http://www.draugeros.ml/index.html'
SUPPORT_URL='http://www.draugeros.ml/page1.html'
BUG_REPORT_URL='http://www.draugeros.ml/page1.html'
PRIVACY_POLICY_URL='https://www.ubuntu.com/legal/terms-and-policies/privacy-policy'
VERSION_CODENAME=revenant
UBUNTU_CODENAME=bionic"
x=$(cat /usr/drauger/updates-config/os-info.txt | grep "7.3.6")
if [[ "$x" == *"7.3.6"* ]]; then
	echo -e "\nYou are currently running Drauger OS 7.3.6.\nA new version of Drauger OS has been released."
	read -p "Would you like to update to the latest version of Drauger OS (7.3.7)? (This will not uninstall any apps you have.) [y/N]: " mark
	if [ "$mark" == "Y" ] || [ "$mark" == "y" ]; then
		echo -e "\nStarting Update Process . . .\nYour screen may blink during this process. If so, do not be alarmed.\nPlease do not shut off or restart your computer until notified that the update is complete.\n"
		sleep 5s
		pkexec apt-get -y install libvulkan1 libvulkan-dev vulkan-utils
		pkexec add-apt-repository -y ppa:oibaf/graphics-drivers
		pkexec add-apt-repository -y ppa:graphics-drivers/ppa
		pkexec apt-get update && pkexec apt-get -y upgrade
		pkexec apt-get -y install mesa-vulkan-drivers vulkan || pkexec apt-get -y install mesa-vulkan-drivers
		pkexec rm /usr/drauger/updates-config/os-info.txt
		pkexec echo "7.3.7 'Revenant'" >> /usr/drauger/updates-config/os-info.txt
		echo -e "\nUpdating lsb_release . . .\n"
		pkexec chattr -i /usr/lib/os-release
		pkexec chattr -i /etc/lsb-release
		pkexec rm /etc/lsb-release && pkexec echo -e "DISTRIB_ID=DraugerOS\nDISTRIB_RELEASE=7.3.7\nDISTRIB_CODENAME=revenant\nDISTRIB_DESCRIPTION='Drauger OS 7.3.7 Revenant" >> /etc/lsb-release
		pkexec rm /usr/lib/os-release && pkexec echo "$LSB" >> /usr/lib/os-release
		pkexec chattr +i /usr/lib/os-release
		pkexec chattr +i /etc/lsb-release
		echo -e "\nThe files /usr/lib/os-release and /etc/lsb-release have been made immutable.\nTo change this and allow them to be edited by the root user again, run\n\n'sudo chattr -i /usr/lib/os-release'\n\nand\n\n'sudo chattr -i /etc/lsb-release'\n"
		pkexec apt-get -y autoremove
		pkexec apt-get -y clean
		echo -e "\nThank you for updating to the latest version of Drauger OS. The updates have been completed.\nIt is advised to restart your computer to ensure all changes take effect.\nWe hope you enjoy the new version of Drauger OS!\n"""
	else
		echo -e "\nCanceling Update . . .\nIf you change your mind, please run 'sudo update-os -i'.\nThank you for using Drauger OS!\n"	
	fi
fi
if [[ $(cat /usr/lib/os-release) != "$LSB" ]] && [[ $(cat /usr/drauger/updates-config/os-info.txt) == "7.3.7 'Revenant'" ]]; then
	pkexec chattr -i /usr/lib/os-release
	pkexec chattr -i /etc/lsb-release
	pkexec rm /etc/lsb-release && pkexec echo -e "DISTRIB_ID=DraugerOS\nDISTRIB_RELEASE=7.3.7\nDISTRIB_CODENAME=revenant\nDISTRIB_DESCRIPTION='Drauger OS 7.3.7 Revenant" >> /etc/lsb-release
	pkexec rm /usr/lib/os-release && pkexec echo "$LSB" >> /usr/lib/os-release
	pkexec chattr +i /usr/lib/os-release
	pkexec chattr +i /etc/lsb-release
	echo -e "\nThe files /usr/lib/os-release and /etc/lsb-release have been made immutable.\nTo change this and allow them to be edited by the root user again, run\n\n'sudo chattr -i /usr/lib/os-release'\n\nand\n\n'sudo chattr -i /etc/lsb-release'\n"
fi
if [[ $(dpkg-query -W -f='${Status}' libtxc-dxtn-s2tc0 2>/dev/null | grep -c "ok installed") == "0" ]]; then
	echo -e "\nApplying Attempted Xfce Steam Compatabilty Fix.\n"
	wget http://ftp.us.debian.org/debian/pool/main/s/s2tc/libtxc-dxtn-s2tc0_0~git20131104-1.1_amd64.deb
	pkexec apt-get -y install $(pwd)/libtxc-dxtn-s2tc0_0~git20131104-1.1_amd64.deb
	rm libtxc-dxtn-s2tc0_0~git20131104-1.1_amd64.deb
fi
if [[ ! $(cat /bin/update-os | grep 'cihsudq') ]]; then
	read -p "Would you like to update the update-os script? This update includes:
	* Adds a quiet option
	* Adds a new display option to print more user friendly output
Would you like to update? [y/N]: " ans
	if [[ "$ans" == "y" ]] || [[ "$ans" == "Y" ]]; then
		echo -e "\nUpdating update-os . . .\n"
		pkexec rm /bin/update-os
		pkexec echo "#!/bin/bash
# -*- coding: utf-8 -*-
#
#  update-os
#  
#  Copyright 2018 Thomas Castleman <draugeros@gmail.com>
#  
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#  
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#  MA 02110-1301, USA.
#" >> /bin/update-os
		pkexec echo 'h="Update script for Drauger OS
-c  check for updates only, do not install them
-i  install already downloaded updates
-h  show this help dialog and exit
-s  show update scipt, to see what updates will be applied
-u  download and install updates
-q  quiet, print less output, MUST BE PASSED FIRST
-d  Display output that is for non-programmers to explain 
    the update that was just applied or will be applied"
flag=0
u=0
q=0
g=0' >> /bin/update-os
		pkexec echo "while getopts 'cihsudq' flag; do" >> /bin/update-os
		pkexec echo 'case "${flag}" in
		c) u=1 ;;
		i) u=2 ;;
       	 	h) u=3 ;;
		s) u=4 ;;
		u) u=5 ;;
		d) u=6 ;;
        	q) q=1 ;;
		*) u=7 ;;
	esac
if [ $u -eq 1 ]; then
    if [[ $EUID != 0 ]]; then
        echo -e "\nPlease run {update-os -c} as root user.\n"
    else
        if [ "$q" == "0" ]; then
            echo -e "\nChecking for Updates to Drauger System . . .\n"
        fi
        wget -O /usr/share/updates-down.txt https://raw.githubusercontent.com/Batcastle/drauger-updates/master/updates-down.txt
        down=$(cat /usr/share/updates-down.txt)
        init=$(cat /usr/share/updates-init.txt)
        if [ "$down" != "$init" ]; then
            chmod +x /usr/share/updates-down.txt
            if [ "$q" == "0" ]; then
                echo -e "\nUpdates are available. Please run {update-os -s} to see them\n"
            fi
            exit 1
        else
            if [ "$q" == "0" ]; then
                echo "\nNo Updates Available.\n"
            fi
            exit 0
        fi
    fi
fi
if [ $u -eq 2 ]; then
    if [[ $EUID != 0 ]]; then
        echo "Please run {update-os -u} as root user."
    else
        bash /usr/share/updates-down.txt
    fi
fi
if [ $u -eq 3 ]; then
    echo -e "\n$h\n"
fi
if [ $u -eq 4 ]; then
    cat /usr/share/updates-down.txt
fi
if [ $u -eq 5 ]; then
    if [[ $EUID != 0 ]]; then
        echo "Please run {update-os -u} as root user."
    else
        if [ "$q" == "0" ]; then
            echo "Checking for Updates to Drauger System . . ."
        fi
        wget -O /usr/share/updates-down.txt https://raw.githubusercontent.com/Batcastle/drauger-updates/master/updates-down.txt
        down=$(cat /usr/share/updates-down.txt)
        init=$(cat /usr/share/updates-init.txt)
        if [ "$down" != "$init" ]; then
            if [ "$q" == "0" ]; then
                echo "Updates Available"
            fi
            chmod +x /usr/share/updates-down.txt
            if [ "$q" == "0" ]; then
                echo "Installing Updates"
            fi
            bash /usr/share/updates-down.txt
        else
            if [ "$q" == "0" ]; then
                echo "No Updates Available."
                g=1
            fi
        fi
        rm /usr/share/updates-init.txt
        cat /usr/share/updates-down.txt >> /usr/share/updates-init.txt
        rm /usr/share/updates-down.txt
        if [ "$g" == "0" ]; then
            exit 2
        fi
    fi
fi
if [ $u -eq 6 ]; then
	cat /usr/share/updates-down.txt | grep "##"
fi
if [ $u -eq 7 ]; then
    if [ "$q" == "0" ]; then
        echo "Option not recognized"
        echo "$h"
    fi
    exit 2
fi
done' >> /bin/update-os
		pkexec chmod +x /bin/update-os
	fi
fi
if [[ ! $(apt search -qq steam-login | grep "installed") ]] && [[ ! $(apt search -qq steam-session | grep "installed") ]] && [[ ! -e /usr/drauger/updates-config/leg6.config ]]; then
	echo ""
	read -p "Would you like to add Steam Big Picture Mode to your login Desktop Environment options list? (If you don't know what this means, please enter "N") [y/N]: " ans
	echo ""
	if [[ "$ans" == "Y" ]] || [[ "$ans" == "y" ]]; then
		wget https://github.com/Batcastle/drauger-updates/raw/master/leg6/steam-session_11_all.deb
		pkexec apt-get -y -qq install $(pwd)/steam-session_11_all.deb
		rm steam-session_11_all.deb
		echo -e "\nThis new update requires a system restart in order to take effect. However, feel free to\ncontinue using your system normally as long as you wish.\n"
	else
		echo -e "\nIf you change your mind, you can go to {https://github.com/thor27/steam-login} and download the install files\nfrom the link in the README, or install from source.\n"
		pkexec echo "OPT_IN=no" >> /usr/drauger/updates-config/leg6.config
	fi
fi
apt-get update
if [[ $? != 0 ]]; then
	rm /etc/apt/sources.list.d/oibaf-ubuntu-graphics-drivers-bionic.list /etc/apt/sources.list.d/oibaf-ubuntu-graphics-drivers-bionic.list.save
	apt-get update
	add-apt-repository -y ppa:oibaf/graphics-drivers
	apt-get update && apt-get -y upgrade && apt-get -y autoremove && apt-get clean
fi
notify-send "Updates Complete!"
# NOTHING FROM HERE DOWN IS CODE. ONLY COMMENTS.
##
## This update fixes a new bug introduced by the maintainer of the repository for graphics drivers changing the repo
## description. This update removes the broken repo from the system,
## updates the repo cache, then re-adds it. Afterwards it goes ahead and updates the repo cache,
## downloads and installs any updates from apt, and then removes anything unnecessary. Afterwards it cleans up after itself.
##
## If you wish to continue using Drauger OS and installing software from any of the repos,
## you may want to install this update.
##
